var _DEBUG = false;
module.exports = function (rs, method, action) {
    if (action) {
        return module.exports.call(action, rs, method);
    }

    var open_admin = this.get_config('open_admin');
    if (_DEBUG) console.log('open_admin: %s', open_admin);

    if (open_admin) {
        return true;
    } else if (this.can && (typeof(this.can) == 'function') && (!this.can(rs, [ 'admin']))) {
        switch (method) {
            case 'get':
                this.on_get_validate_error(rs, 'you are not authorized to administer this site');
                break;

            case 'put':
                this.on_put_validate_error(rs, 'you are not authorized to administer this site');
                break;

            case 'post':
                this.on_post_validate_error(rs, 'you are not authorized to administer this site');
                break;

            case 'delete':
                this.on_delete_validate_error(rs, 'you are not authorized to administer this site');
                break;

            default:
                this.on_validate_error(rs, 'you are not authorized to administer this site');
        }
        return false;
    } else {
        return true;
    }
}
